name: "1.0$(Rev:.r)"

trigger:
  - main

variables:
  CI: "true"
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  solution: "rig-watcher.sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"
  appName: "rig-watcher"
jobs:
  - job: build
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - task: Docker@2
        displayName: Login to Docker
        inputs:
          command: login
          containerRegistry: "Docker Hub"

      - task: Docker@2
        displayName: Build and Push Docker Image
        inputs:
          containerRegistry: "Docker Hub"
          repository: jacksondr5/genshin-api
          command: buildAndPush
          Dockerfile: Dockerfile
          tags: |
            $(Build.BuildNumber)
            latest
  - job: analyze
    pool:
      vmImage: "windows-latest"
    steps:
      - task: UseDotNet@2
        displayName: Install .NET 6.0.x
        inputs:
          packageType: "sdk"
          version: "6.0.x"

      # Needed for SonarQube
      - task: UseDotNet@2
        displayName: Install .NET Core 2.2.x for SonarCloud
        inputs:
          packageType: "sdk"
          version: "2.2.x"

      - task: SonarCloudPrepare@1
        displayName: Prepare SonarCloud Analysis
        inputs:
          SonarCloud: "SonarCloud"
          organization: "jacksondr5"
          scannerMode: "MSBuild"
          projectKey: "rig-watcher"
          projectName: "rig-watcher"
          projectVersion: $(Build.BuildNumber)
      - task: DotNetCoreCLI@2
        displayName: Restore Packages
        inputs:
          command: "restore"
          projects: $(solution)
          feedsToUse: "select"
          verbosityRestore: "Minimal"

      - task: DotNetCoreCLI@2
        displayName: Build Solution
        inputs:
          command: "build"
          projects: $(solution)
          arguments: "-c $(buildConfiguration) --no-restore --nologo"

      - task: SonarCloudAnalyze@1
        displayName: Run SonarCloud Analysis

      - task: SonarCloudPublish@1
        displayName: Publish SonarCloud Analysis
        inputs:
          pollingTimeoutSec: "300"
